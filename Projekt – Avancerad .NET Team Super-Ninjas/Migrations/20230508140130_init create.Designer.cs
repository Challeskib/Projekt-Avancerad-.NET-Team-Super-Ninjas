// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt___Avancerad_.NET_Team_Super_Ninjas.Data;

#nullable disable

namespace Projekt___Avancerad_.NET_Team_Super_Ninjas.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230508140130_init create")]
    partial class initcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeProject", b =>
                {
                    b.Property<int>("EmployeesEmpId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsProjId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmpId", "ProjectsProjId");

                    b.HasIndex("ProjectsProjId");

                    b.ToTable("EmployeeProject");
                });

            modelBuilder.Entity("TimeReportModels.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpId = 1,
                            Email = "Kalle@företaget.com",
                            Name = "Kalle Gustavsson"
                        },
                        new
                        {
                            EmpId = 2,
                            Email = "Sara@företaget.com",
                            Name = "Sara Andersson"
                        },
                        new
                        {
                            EmpId = 3,
                            Email = "Johan@företaget.com",
                            Name = "Johan Svensson"
                        },
                        new
                        {
                            EmpId = 4,
                            Email = "Lisa@företaget.com",
                            Name = "Lisa Lindström"
                        },
                        new
                        {
                            EmpId = 5,
                            Email = "Anders@företaget.com",
                            Name = "Anders Nilsson"
                        },
                        new
                        {
                            EmpId = 6,
                            Email = "Emma@företaget.com",
                            Name = "Emma Bergström"
                        },
                        new
                        {
                            EmpId = 7,
                            Email = "Peter@företaget.com",
                            Name = "Peter Persson"
                        },
                        new
                        {
                            EmpId = 8,
                            Email = "Maria@företaget.com",
                            Name = "Maria Karlsson"
                        },
                        new
                        {
                            EmpId = 9,
                            Email = "Erik@företaget.com",
                            Name = "Erik Johansson"
                        },
                        new
                        {
                            EmpId = 10,
                            Email = "Anna@företaget.com",
                            Name = "Anna Ahlström"
                        });
                });

            modelBuilder.Entity("TimeReportModels.EmployeeProject", b =>
                {
                    b.Property<int>("ProjId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("ProjId", "EmpId");

                    b.ToTable("EmployeeProjects");

                    b.HasData(
                        new
                        {
                            ProjId = 1,
                            EmpId = 1
                        },
                        new
                        {
                            ProjId = 1,
                            EmpId = 2
                        },
                        new
                        {
                            ProjId = 1,
                            EmpId = 3
                        },
                        new
                        {
                            ProjId = 1,
                            EmpId = 4
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 5
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 6
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 7
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 8
                        },
                        new
                        {
                            ProjId = 3,
                            EmpId = 9
                        },
                        new
                        {
                            ProjId = 3,
                            EmpId = 10
                        },
                        new
                        {
                            ProjId = 3,
                            EmpId = 4
                        },
                        new
                        {
                            ProjId = 3,
                            EmpId = 5
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 2
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 3
                        },
                        new
                        {
                            ProjId = 2,
                            EmpId = 10
                        });
                });

            modelBuilder.Entity("TimeReportModels.Project", b =>
                {
                    b.Property<int>("ProjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjId = 1,
                            Description = "Develop an online store for a retail company.",
                            Name = "E-commerce Website"
                        },
                        new
                        {
                            ProjId = 2,
                            Description = "Create a web platform for bloggers to publish and share their content.",
                            Name = "Blog Platform"
                        },
                        new
                        {
                            ProjId = 3,
                            Description = "Develop a fun and engaging mobile game for iOS and Android platforms.",
                            Name = "Mobile Game App"
                        });
                });

            modelBuilder.Entity("TimeReportModels.TimeReport", b =>
                {
                    b.Property<int>("TRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TRId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkHours")
                        .HasColumnType("time");

                    b.HasKey("TRId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TimeReports");

                    b.HasData(
                        new
                        {
                            TRId = 1,
                            EmployeeId = 1,
                            End = new DateTime(2023, 2, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 2, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 2,
                            EmployeeId = 2,
                            End = new DateTime(2023, 3, 15, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 3, 30, 0, 0)
                        },
                        new
                        {
                            TRId = 3,
                            EmployeeId = 3,
                            End = new DateTime(2023, 4, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 4,
                            EmployeeId = 4,
                            End = new DateTime(2023, 5, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 5, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            TRId = 5,
                            EmployeeId = 5,
                            End = new DateTime(2023, 1, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 6,
                            EmployeeId = 6,
                            End = new DateTime(2023, 2, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 2, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 7,
                            EmployeeId = 7,
                            End = new DateTime(2023, 3, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 8,
                            EmployeeId = 8,
                            End = new DateTime(2023, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 9,
                            EmployeeId = 9,
                            End = new DateTime(2023, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 5, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 10,
                            EmployeeId = 10,
                            End = new DateTime(2023, 1, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 11,
                            EmployeeId = 1,
                            End = new DateTime(2023, 1, 10, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 10, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            TRId = 12,
                            EmployeeId = 1,
                            End = new DateTime(2023, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 13,
                            EmployeeId = 2,
                            End = new DateTime(2023, 1, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 14,
                            EmployeeId = 3,
                            End = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 15,
                            EmployeeId = 4,
                            End = new DateTime(2023, 1, 4, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 4, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 16,
                            EmployeeId = 5,
                            End = new DateTime(2023, 1, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 17,
                            EmployeeId = 6,
                            End = new DateTime(2023, 1, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 6, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 18,
                            EmployeeId = 7,
                            End = new DateTime(2023, 1, 7, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 19,
                            EmployeeId = 8,
                            End = new DateTime(2023, 1, 8, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 20,
                            EmployeeId = 9,
                            End = new DateTime(2023, 1, 9, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 21,
                            EmployeeId = 1,
                            End = new DateTime(2023, 3, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 22,
                            EmployeeId = 2,
                            End = new DateTime(2023, 4, 18, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 18, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 23,
                            EmployeeId = 3,
                            End = new DateTime(2023, 5, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 5, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 24,
                            EmployeeId = 4,
                            End = new DateTime(2023, 1, 25, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 25,
                            EmployeeId = 5,
                            End = new DateTime(2023, 2, 10, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 2, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 26,
                            EmployeeId = 6,
                            End = new DateTime(2023, 3, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 27,
                            EmployeeId = 7,
                            End = new DateTime(2023, 4, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            TRId = 28,
                            EmployeeId = 8,
                            End = new DateTime(2023, 5, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 5, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            TRId = 29,
                            EmployeeId = 9,
                            End = new DateTime(2023, 1, 20, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 1, 20, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            TRId = 30,
                            EmployeeId = 10,
                            End = new DateTime(2023, 2, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 2, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkHours = new TimeSpan(0, 2, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("EmployeeProject", b =>
                {
                    b.HasOne("TimeReportModels.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeReportModels.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsProjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeReportModels.TimeReport", b =>
                {
                    b.HasOne("TimeReportModels.Employee", "Employee")
                        .WithMany("TimeReports")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TimeReportModels.Employee", b =>
                {
                    b.Navigation("TimeReports");
                });
#pragma warning restore 612, 618
        }
    }
}
